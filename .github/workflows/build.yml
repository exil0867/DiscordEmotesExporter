name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -U discord.py-self python-slugify pyinstaller
    - name: Create package
      run: |
        pyinstaller --onefile main.py --distpath dist/${{ matrix.os }}
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ./dist
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: dist
    - run: |
        import os
        import shutil
        
        parent_directory = "./"
        output_directory = os.path.join(parent_directory, "output")
        os.makedirs(output_directory, exist_ok=True)
        
        for platform_directory in os.listdir(parent_directory):
            platform_path = os.path.join(parent_directory, platform_directory)
            if os.path.isdir(platform_path):
                platform_name = os.path.basename(platform_directory)
                for executable_file in os.listdir(platform_path):
                    executable_name = os.path.basename(executable_file)
                    new_executable_name = f"{platform_name}-{executable_name}"
                    source_path = os.path.join(platform_path, executable_name)
                    destination_path = os.path.join(output_directory, new_executable_name)
                    shutil.move(source_path, destination_path)
      shell: python
    - name: Create a release
      run: |
        gh release create ${{ inputs.version }} './output/*' --generate-notes -t "Release ${{ inputs.version }}" -R ${{github.repository}}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_RELEASE }}
